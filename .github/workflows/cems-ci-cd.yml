name: CEMS (CI-CD)
on: 
    workflow_dispatch:
permissions:
  id-token: write
  contents: read
env:
    AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}    # set this to your Azure Subscription Id
    AZURE_RESOURCEGROUP_NAME: cems-rg                      # set this to your preferred resource group name
    SQLSERVER_NAME: cems-db-srv                          # set this to your preferred sql server name
    DATABASE_NAME: cemsdb                   # set this to your preferred sql database name
    SQLADMIN_LOGIN: ${{ secrets.SQLADMIN_LOGIN  }}                # Create a secret in your Github repo for the SQL Admin login name you want to use
    SQLADMIN_PASS: ${{ secrets.SQLADMIN_PASS  }}                 # Create a secret in your Github repo for the SQL Admin password you want to use
    CEMS_APP_SERVICE_PLAN_NAME: cems-app-service
    CEMS_AUTH_SERVICE_NAME: cems-auth-service
    CEMS_SOLUTION_PATH: repo/CEMS/src/backend
    CEMS_AUTH_SERVICE_PATH: repo/CEMS/src/backend/CEMS.AuthService
    CEMS_AUTH_SERVICE_PROJECT: CEMS.AuthService.csproj
    CEMS_AUTH_SERVICE_PUBLISH_PROFILE: ${{ secrets.AUTH_SERVICE_PUBLISH_PROFILE }}
    DOTNET_VERSION: '8.0.x'
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: repo

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 

      # Restore dependencies
      - name: Restore dependencies
        run: |
          dotnet restore ${{env.CEMS_SOLUTION_PATH}}/CEMS.sln

      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet build ${{env.CEMS_AUTH_SERVICE_PATH}}/${{env.CEMS_AUTH_SERVICE_PROJECT}} --configuration Release --no-restore
          dotnet publish ${{env.CEMS_AUTH_SERVICE_PATH}}/${{env.CEMS_AUTH_SERVICE_PROJECT}} -c Release -o ${{env.CEMS_AUTH_SERVICE_PATH}}/myapp 
      
      #Run Test
      - name: test
        run: |
          dotnet test ${{env.CEMS_SOLUTION_PATH}}/CEMS.sln

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.cems_env_SPN }}

      - name: create db connection string
        run: |
          CONN_STR=$(az sql db show-connection-string --client ado.net --server ${{ env.SQLSERVER_NAME }} --name ${{ env.DATABASE_NAME }} -o tsv)
          echo "$CONN_STR"
          CONN_STR=$(echo $CONN_STR | sed "s/<username>/${{ env.SQLADMIN_LOGIN }}/g")
          echo "$CONN_STR"
          CONN_STR=$(echo $CONN_STR | sed "s/<password>/${{ env.SQLADMIN_PASS }}/g")
          echo "SQL_DB_CONN_STR=$CONN_STR" >> $GITHUB_ENV

      - name: Install dotnet-ef & Update Database
        run: |
          dotnet tool install --global dotnet-ef
          dotnet ef database update --project ${{env.CEMS_SOLUTION_PATH}}/CEMS.Dal/CEMS.Dal.csproj --startup-project ${{env.CEMS_AUTH_SERVICE_PATH}}/${{env.CEMS_AUTH_SERVICE_PROJECT}}
        env:
          ConnectionStrings__CEMSDatabase: ${{ env.SQL_DB_CONN_STR }}

      # Deploy to Azure Web apps staging slot
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.CEMS_AUTH_SERVICE_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AUTH_SERVICE_PUBLISH_PROFILE }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.CEMS_AUTH_SERVICE_PATH }}/myapp'
          slot-name: staging

      - name: Swap to production slot
        run: |
          az webapp deployment slot swap --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name ${{ env.CEMS_AUTH_SERVICE_NAME }} --slot staging --target-slot production
          echo "Swap finished. Auth Service Application URL: https://$(az webapp show --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name ${{ env.CEMS_AUTH_SERVICE_NAME }} --query hostNames[0] -o tsv)"